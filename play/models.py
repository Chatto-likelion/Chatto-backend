from django.db import models
from django.contrib.auth.models import User
from django.utils import timezone

# Create your models here.
class ChatPlay(models.Model):
    chat_id = models.AutoField(primary_key=True)
    title = models.TextField()
    file = models.FileField(upload_to='chat_files_play/')
    people_num = models.IntegerField()
    uploaded_at = models.DateTimeField(default=timezone.now)
    user = models.ForeignKey(User, on_delete=models.CASCADE)

class ResultPlayChem(models.Model):
    result_id = models.AutoField(primary_key=True)
    title = models.TextField(default = "")
    people_num = models.IntegerField(default=0)
    is_saved = models.BooleanField(default=False)
    relationship = models.TextField(default="")
    situation = models.TextField(default="")
    analysis_date_start = models.TextField(default="")
    analysis_date_end = models.TextField(default="")
    created_at = models.DateTimeField(default=timezone.now)
    chat = models.ForeignKey(ChatPlay, on_delete=models.SET_NULL, null=True, blank=True)

class ResultPlaySome(models.Model):
    result_id = models.AutoField(primary_key=True)
    title = models.TextField(default = "")
    people_num = models.IntegerField(default=0)
    is_saved = models.BooleanField(default=False)
    relationship = models.TextField(default="")
    age = models.TextField(default="")
    analysis_date_start = models.TextField(default="")
    analysis_date_end = models.TextField(default="")
    created_at = models.DateTimeField(default=timezone.now)
    chat = models.ForeignKey(ChatPlay, on_delete=models.SET_NULL, null=True, blank=True)

class ResultPlayMBTI(models.Model):
    result_id = models.AutoField(primary_key=True)
    title = models.TextField(default = "")
    people_num = models.IntegerField(default=0)
    is_saved = models.BooleanField(default=False)
    analysis_date_start = models.TextField(default="")
    analysis_date_end = models.TextField(default="")
    created_at = models.DateTimeField(default=timezone.now)
    chat = models.ForeignKey(ChatPlay, on_delete=models.SET_NULL, null=True, blank=True)

class ResultPlaySomeSpec(models.Model):
    spec_id = models.AutoField(primary_key=True)
    result = models.ForeignKey(ResultPlaySome, on_delete=models.CASCADE)
    score_main = models.IntegerField(default=0)
    comment_main = models.TextField(default="")
    score_A = models.IntegerField(default=0)
    score_B = models.IntegerField(default=0)
    trait_A = models.TextField(default="")
    trait_B = models.TextField(default="")
    summary = models.TextField(default="")
    tone = models.IntegerField(default=0)
    tone_desc = models.TextField(default="")
    tone_ex = models.TextField(default="")
    emo = models.IntegerField(default=0)
    emo_desc = models.TextField(default="")
    emo_ex = models.TextField(default="")
    addr = models.IntegerField(default=0)
    addr_desc = models.TextField(default="")
    addr_ex = models.TextField(default="")
    reply_A = models.IntegerField(default=0)
    reply_B = models.IntegerField(default=0)
    reply_A_desc = models.TextField(default="")
    reply_B_desc = models.TextField(default="")
    rec_A = models.IntegerField(default=0)
    rec_B = models.IntegerField(default=0)
    rec_A_desc = models.TextField(default="")   
    rec_B_desc = models.TextField(default="")
    rec_A_ex = models.TextField(default="")
    rec_B_ex = models.TextField(default="")
    atti_A = models.IntegerField(default=0)
    atti_B = models.IntegerField(default=0)
    atti_A_desc = models.TextField(default="")
    atti_B_desc = models.TextField(default="")
    atti_A_ex = models.TextField(default="")
    atti_B_ex = models.TextField(default="")
    pattern_analysis = models.TextField(default="")
    chatto_coundel = models.TextField(default="")
    chatto_coundel_tips = models.TextField(default="")

class ResultPlayMBTISpec(models.Model):
    spec_id = models.AutoField(primary_key=True)
    result = models.ForeignKey(ResultPlayMBTI, on_delete=models.CASCADE)
    total_I = models.IntegerField(default=0)
    total_E = models.IntegerField(default=0)
    total_S = models.IntegerField(default=0)
    total_N = models.IntegerField(default=0)
    total_F = models.IntegerField(default=0)
    total_T = models.IntegerField(default=0)
    total_J = models.IntegerField(default=0)
    total_P = models.IntegerField(default=0)

class ResultPlayMBTISpecPersonal(models.Model):
    specpersonal_id = models.AutoField(primary_key=True)
    spec = models.ForeignKey(ResultPlayMBTISpec, on_delete=models.CASCADE)
    MBTI = models.TextField(default="")
    summary = models.TextField(default="")
    desc = models.TextField(default="")
    position = models.TextField(default="")
    personality = models.TextField(default="")
    style = models.TextField(default="")
    moment_ex = models.TextField(default="")
    moment_desc = models.TextField(default="")
    momentIE_ex = models.TextField(default="")
    momentIE_desc = models.TextField(default="")
    momentSN_ex = models.TextField(default="")
    momentSN_desc = models.TextField(default="")
    momentFT_ex = models.TextField(default="")
    momentFT_desc = models.TextField(default="")
    momentJP_ex = models.TextField(default="")
    momentJP_desc = models.TextField(default="")